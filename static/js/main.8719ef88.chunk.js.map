{"version":3,"sources":["transitions/popTransition.module.css","components/ContactForm/ContactForm.module.css","components/Phonebook/Phonebook.module.css","transitions/logoTransition.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/DeleteBtn/DeleteBtn.module.css","components/Filter/Filter.module.css","helpers.js","Redux/phonebookActions.js","Redux/phonebookReducer.js","Redux/store.js","components/Notification/Notification.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactFormContainer.js","components/ContactList/DeleteBtn/DeleteBtn.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/contactListContainer.js","components/Filter/Filter.jsx","components/Filter/FilterContainer.js","components/Phonebook/Phonebook.jsx","components/Phonebook/PhonebookContainer.js","index.js"],"names":["module","exports","isUniqueName","state","contactName","some","el","name","filterContactsByName","contacts","filter","sort","a","b","sortContactsAlphabetically","toLowerCase","includes","formatedNumber","number","replace","addContact","createAction","payload","id","nanoid","deleteContact","addContactsToLS","filterContacts","contactsReducer","createReducer","phonebookActions","contact","filterReducer","store","configureStore","reducer","Notification","text","isShow","CSSTransition","in","timeout","classNames","popTransition","unmountOnExit","className","style","alert","initialState","ContactForm","isAlertShow","handleSubmit","e","preventDefault","props","onAddContact","setState","setTimeout","handleChange","target","value","this","onSubmit","styles","form","input","type","onChange","placeholder","autoComplete","btn","disabled","Component","connect","dispatch","DeleteBtn","onDelete","onClick","ContactListItem","listItem","ContactList","listItems","map","key","TransitionGroup","component","list","contactList","Filter","onFilter","Phonebook","isLogoShow","contactsLS","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","logoWrap","logoTransition","logo","title","length","phonebookAction","render","document","getElementById"],"mappings":"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","file":"static/js/main.8719ef88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"popTransition_enter___AwzP\",\"enterActive\":\"popTransition_enterActive__32dNK\",\"exit\":\"popTransition_exit__RhvoC\",\"exitActive\":\"popTransition_exitActive__eTI4n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__5O7yg\",\"input\":\"ContactForm_input__310Xr\",\"btn\":\"ContactForm_btn__1BfL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrap\":\"Phonebook_logoWrap__1YlpW\",\"logo\":\"Phonebook_logo__3s1zs\",\"title\":\"Phonebook_title__2JgK1 Phonebook_logoWrap__1YlpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logoTransition_enter__12Kuq\",\"enterActive\":\"logoTransition_enterActive__2qPFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__1qa1C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__16UWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3fGx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"DeleteBtn_btn__3NVPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2XYVL\"};","const isUniqueName = (state, contactName) => {\r\n  return !state.some((el) => el.name === contactName);\r\n};\r\n\r\nconst sortContactsAlphabetically = (contacts) => {\r\n  const sortedArr = [...contacts];\r\n\r\n  return sortedArr.sort((a, b) => {\r\n    if (a.name < b.name) return -1;\r\n    if (a.name < b.name) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst filterContactsByName = (contacts, filter) => {\r\n  const filtred = contacts.filter((el) =>\r\n    el.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return sortContactsAlphabetically(filtred);\r\n};\r\n\r\nconst formatedNumber = (number) => {\r\n  return number.replace(/(\\d{1,3}(?=(?:\\d\\d)+(?!\\d)))/g, \"$1-\");\r\n};\r\n\r\nexport {\r\n  isUniqueName,\r\n  filterContactsByName,\r\n  sortContactsAlphabetically,\r\n  formatedNumber,\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport { formatedNumber } from \"../helpers\";\r\n\r\nexport const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\r\n  payload: {\r\n    name,\r\n    number: formatedNumber(number),\r\n    id: nanoid(),\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"contacts/delete\", (id) => ({\r\n  payload: { id },\r\n}));\r\n\r\nexport const addContactsToLS = createAction(\r\n  \"contacts/addToLocalStorage\",\r\n  (contacts) => ({ payload: contacts }),\r\n);\r\n\r\nexport const filterContacts = createAction(\"contacts/filter\");\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport * as phonebookActions from \"./phonebookActions\";\r\n\r\nconst initialContactsState = [\r\n  // { id: \"1\", name: \"dima\", number: \"32132\" },\r\n  // { id: \"2\", name: \"dasha\", number: \"654654\" },\r\n  // { id: \"3\", name: \"cat\", number: \"32132\" },\r\n  // { id: \"4\", name: \"dog\", number: \"654654\" },\r\n];\r\n\r\nconst contactsReducer = createReducer(initialContactsState, {\r\n  [phonebookActions.addContact]: (state, { payload }) => [...state, payload],\r\n  [phonebookActions.deleteContact]: (state, { payload }) =>\r\n    state.filter((contact) => contact.id !== payload.id),\r\n  [phonebookActions.addContactsToLS]: (state, { payload }) => [...payload],\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [phonebookActions.filterContacts]: (state, { payload }) => payload,\r\n});\r\n\r\nexport { contactsReducer, filterReducer };\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport { contactsReducer, filterReducer } from \"./phonebookReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: { contacts: contactsReducer, filter: filterReducer },\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./Notification.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Notification = ({ text, isShow }) => (\r\n  <CSSTransition\r\n    in={isShow}\r\n    timeout={250}\r\n    classNames={popTransition}\r\n    unmountOnExit\r\n  >\r\n    <div className={style.alert}>\r\n      <p>{text}</p>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nimport { isUniqueName } from \"../../helpers\";\r\n\r\nconst initialState = { name: \"\", number: \"\" };\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string,\r\n        name: PropTypes.string,\r\n        number: PropTypes.string,\r\n      }),\r\n    ),\r\n  };\r\n\r\n  state = {\r\n    ...initialState,\r\n    isAlertShow: false,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { contacts } = this.props;\r\n\r\n    if (isUniqueName(contacts, this.state.name)) {\r\n      this.props.onAddContact({ ...this.state });\r\n    } else {\r\n      this.setState((state) => ({ isAlertShow: !state.isAlertShow }));\r\n\r\n      setTimeout(() => {\r\n        this.setState((state) => ({ isAlertShow: !state.isAlertShow }));\r\n      }, 3000);\r\n    }\r\n\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const name = target.name;\r\n    let value = target.value;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number, isAlertShow } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={styles.form}>\r\n          <input\r\n            className={styles.input}\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Name\"\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            className={styles.input}\r\n            name=\"number\"\r\n            type=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Number\"\r\n            autoComplete=\"off\"\r\n          />\r\n\r\n          <button\r\n            className={styles.btn}\r\n            type=\"submit\"\r\n            disabled={!name || !number}\r\n          >\r\n            Add contact\r\n          </button>\r\n        </form>\r\n\r\n        <Notification isShow={isAlertShow} text=\"Contact is already exist\" />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddContact: (contact) => dispatch(phonebookActions.addContact(contact)),\r\n});\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./DeleteBtn.module.css\";\r\n\r\nconst DeleteBtn = ({ onDelete }) => {\r\n  return (\r\n    <button className={styles.btn} onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\n\r\nDeleteBtn.propTypes = {\r\n  id: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => (\r\n  <li className={styles.listItem}>\r\n    {name}: {number}\r\n    <DeleteBtn onDelete={onDelete} />\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { filterContactsByName } from \"../../helpers\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, filter, onDelete }) => {\r\n  const filtredContacts = filterContactsByName(contacts, filter);\r\n\r\n  const listItems = filtredContacts.map(({ id, name, number }) => {\r\n    return (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDelete(id)}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {listItems}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nimport contactList from \"./ContactList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(contactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Filter = ({ value, onFilter, isShow }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isShow}\r\n      timeout={250}\r\n      classNames={popTransition}\r\n      unmountOnExit\r\n    >\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={(e) => onFilter(e.target.value)}\r\n        value={value}\r\n        placeholder=\"Find contact by name\"\r\n      />\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nimport Filter from \"./Filter\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (value) => dispatch(phonebookActions.filterContacts(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./Phonebook.module.css\";\r\nimport logoTransition from \"../../transitions/logoTransition.module.css\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactFormContainer\";\r\nimport ContactList from \"../ContactList/contactListContainer\";\r\nimport Filter from \"../Filter/FilterContainer\";\r\n\r\nexport default class Phonebook extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    addContactsToLS: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    isLogoShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState((state) => ({ isLogoShow: !state.isLogoShow }));\r\n\r\n    const contactsLS = localStorage.getItem(\"contacts\");\r\n\r\n    if (contactsLS) {\r\n      const { addContactsToLS } = this.props;\r\n      const contacts = JSON.parse(contactsLS);\r\n\r\n      addContactsToLS(contacts);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { contacts } = this.props;\r\n\r\n    if (prevProps.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isLogoShow } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className={style.logoWrap}>\r\n          <CSSTransition\r\n            in={isLogoShow}\r\n            timeout={500}\r\n            classNames={logoTransition}\r\n          >\r\n            <h2 className={style.logo}>Phonebook</h2>\r\n          </CSSTransition>\r\n        </div>\r\n\r\n        <ContactForm />\r\n\r\n        <h2 className={style.title}>Contacts</h2>\r\n\r\n        <Filter isShow={contacts.length >= 2} />\r\n\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookAction from \"../../Redux/phonebookActions\";\r\n\r\nimport Phonebook from \"./Phonebook\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContactsToLS: (contacts) =>\r\n    dispatch(phonebookAction.addContactsToLS(contacts)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Phonebook from \"./components/Phonebook/PhonebookContainer\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <Phonebook />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n"],"sourceRoot":""}