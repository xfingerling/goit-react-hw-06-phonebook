{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Phonebook/Phonebook.module.css","transitions/logoTransition.module.css","components/ContactList/ContactList.module.css","components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactList/DeleteBtn/DeleteBtn.module.css","components/Filter/Filter.module.css","components/Notification/Notification.module.css","Redux/ActionTypes.js","helpers.js","Redux/phonebookReducer.js","Redux/store.js","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactFormContainer.js","Redux/phonebookActions.js","components/ContactList/DeleteBtn/DeleteBtn.jsx","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/contactListContainer.js","components/Filter/Filter.jsx","components/Filter/FilterContainer.js","components/Notification/Notification.jsx","components/Phonebook/Phonebook.jsx","components/Phonebook/PhonebookContainer.js","index.js","transitions/popTransition.module.css"],"names":["module","exports","isUniqueName","state","contact","some","el","name","filterContactsByName","contacts","filter","sort","a","b","sortContactsAlphabetically","toLowerCase","includes","initialContactsState","combineReducers","type","payload","Type","alert","id","store","createStore","phonebookReducer","devToolsEnhancer","initialState","number","ContactForm","handleSubmit","e","preventDefault","props","onAddContact","setState","handleChange","target","value","this","onSubmit","className","styles","form","input","onChange","placeholder","autoComplete","btn","disabled","Component","connect","dispatch","uniqid","phonebookActions","DeleteBtn","onDelete","onClick","ContactListItem","listItem","ContactList","listItems","map","CSSTransition","key","timeout","classNames","popTransition","unmountOnExit","TransitionGroup","component","list","contactList","Filter","onFilter","isShow","in","Notification","text","style","Phonebook","isAlertShow","isLogoShow","contactsLS","localStorage","getItem","addContactsToLS","JSON","parse","prevProps","setItem","stringify","logoWrap","logoTransition","logo","title","length","phonebookAction","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.7664e263.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__5O7yg\",\"input\":\"ContactForm_input__310Xr\",\"btn\":\"ContactForm_btn__1BfL7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoWrap\":\"Phonebook_logoWrap__1YlpW\",\"logo\":\"Phonebook_logo__3s1zs\",\"title\":\"Phonebook_title__2JgK1 Phonebook_logoWrap__1YlpW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"logoTransition_enter__12Kuq\",\"enterActive\":\"logoTransition_enterActive__2qPFl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__16UWA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__3fGx8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"DeleteBtn_btn__3NVPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2XYVL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__1qa1C\"};","export default {\r\n  ADD_CONTACT: \"ADD_CONTACT\",\r\n  DELETE_CONTACT: \"DELETE_CONTACT\",\r\n  FILTER_CONTACTS: \"FILTER_CONTACTS\",\r\n  ADD_CONTACTS_TO_LS: \"ADD_CONTACTS_TO_LS\",\r\n};\r\n","const isUniqueName = (state, contact) => {\r\n  return !state.some((el) => el.name === contact.name);\r\n};\r\n\r\nconst sortContactsAlphabetically = (contacts) => {\r\n  const sortedArr = [...contacts];\r\n\r\n  return sortedArr.sort((a, b) => {\r\n    if (a.name < b.name) return -1;\r\n    if (a.name < b.name) return 1;\r\n    return 0;\r\n  });\r\n};\r\n\r\nconst filterContactsByName = (contacts, filter) => {\r\n  const filtred = contacts.filter((el) =>\r\n    el.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n\r\n  return sortContactsAlphabetically(filtred);\r\n};\r\n\r\nexport { isUniqueName, filterContactsByName, sortContactsAlphabetically };\r\n","import { combineReducers } from \"redux\";\r\nimport Type from \"./ActionTypes\";\r\n\r\nimport { isUniqueName } from \"../helpers\";\r\n\r\nconst initialContactsState = [\r\n  // { id: \"1\", name: \"dima\", number: \"32132\" },\r\n  // { id: \"2\", name: \"dasha\", number: \"654654\" },\r\n  // { id: \"3\", name: \"cat\", number: \"32132\" },\r\n  // { id: \"4\", name: \"dog\", number: \"654654\" },\r\n];\r\n\r\nconst contactsReducer = (state = initialContactsState, { type, payload }) => {\r\n  switch (type) {\r\n    case Type.ADD_CONTACT:\r\n      if (!isUniqueName(state, payload)) {\r\n        alert(`${payload.name} is already exist`);\r\n        return state;\r\n      }\r\n      return [...state, payload];\r\n\r\n    case Type.DELETE_CONTACT:\r\n      return state.filter((el) => el.id !== payload.id);\r\n\r\n    case Type.ADD_CONTACTS_TO_LS:\r\n      return [...payload];\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filterReducer = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case Type.FILTER_CONTACTS:\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { devToolsEnhancer } from \"redux-devtools-extension\";\r\n\r\nimport phonebookReducer from \"./phonebookReducer\";\r\n\r\nconst store = createStore(phonebookReducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nconst initialState = { name: \"\", number: \"\" };\r\n\r\nexport default class ContactForm extends Component {\r\n  static propTypes = {\r\n    onAddContact: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    ...initialState,\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onAddContact({ ...this.state });\r\n    this.setState({ ...initialState });\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const name = target.name;\r\n    let value = target.value;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.form}>\r\n        <input\r\n          className={styles.input}\r\n          name=\"name\"\r\n          type=\"text\"\r\n          value={name}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Name\"\r\n          autoComplete=\"off\"\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          name=\"number\"\r\n          type=\"number\"\r\n          value={number}\r\n          onChange={this.handleChange}\r\n          placeholder=\"Number\"\r\n          autoComplete=\"off\"\r\n        />\r\n\r\n        <button\r\n          className={styles.btn}\r\n          type=\"submit\"\r\n          disabled={!name || !number}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onAddContact: (contact) => dispatch(phonebookActions.addContact(contact)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import uniqid from \"uniqid\";\r\nimport Type from \"./ActionTypes\";\r\n\r\nexport const addContact = (contact) => ({\r\n  type: Type.ADD_CONTACT,\r\n  payload: {\r\n    name: contact.name,\r\n    number: contact.number,\r\n    id: uniqid(),\r\n  },\r\n});\r\n\r\nexport const deleteContact = (id) => ({\r\n  type: Type.DELETE_CONTACT,\r\n  payload: {\r\n    id: id,\r\n  },\r\n});\r\n\r\nexport const addContactsToLS = (contacts) => ({\r\n  type: Type.ADD_CONTACTS_TO_LS,\r\n  payload: contacts,\r\n});\r\n\r\nexport const filterContacts = (value) => ({\r\n  type: Type.FILTER_CONTACTS,\r\n  payload: value,\r\n});\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./DeleteBtn.module.css\";\r\n\r\nconst DeleteBtn = ({ onDelete }) => {\r\n  return (\r\n    <button className={styles.btn} onClick={onDelete}>\r\n      Delete\r\n    </button>\r\n  );\r\n};\r\n\r\nDeleteBtn.propTypes = {\r\n  id: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default DeleteBtn;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nimport DeleteBtn from \"../DeleteBtn/DeleteBtn\";\r\n\r\nconst ContactListItem = ({ name, number, onDelete }) => (\r\n  <li className={styles.listItem}>\r\n    {name}: {number}\r\n    <DeleteBtn onDelete={onDelete} />\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { filterContactsByName } from \"../../helpers\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nimport ContactListItem from \"./ContactListItem/ContactListItem\";\r\n\r\nconst ContactList = ({ contacts, filter, onDelete }) => {\r\n  const filtredContacts = filterContactsByName(contacts, filter);\r\n\r\n  const listItems = filtredContacts.map(({ id, name, number }) => {\r\n    return (\r\n      <CSSTransition\r\n        key={id}\r\n        timeout={250}\r\n        classNames={popTransition}\r\n        unmountOnExit\r\n      >\r\n        <ContactListItem\r\n          name={name}\r\n          number={number}\r\n          onDelete={() => onDelete(id)}\r\n        />\r\n      </CSSTransition>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.list}>\r\n      {listItems}\r\n    </TransitionGroup>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDelete: PropTypes.func,\r\n  filter: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nimport contactList from \"./ContactList\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(phonebookActions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(contactList);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Filter = ({ value, onFilter, isShow }) => {\r\n  return (\r\n    <CSSTransition\r\n      in={isShow}\r\n      timeout={250}\r\n      classNames={popTransition}\r\n      unmountOnExit\r\n    >\r\n      <input\r\n        className={styles.input}\r\n        type=\"text\"\r\n        onChange={(e) => onFilter(e.target.value)}\r\n        value={value}\r\n        placeholder=\"Find contact by name\"\r\n      />\r\n    </CSSTransition>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func,\r\n  value: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookActions from \"../../Redux/phonebookActions\";\r\n\r\nimport Filter from \"./Filter\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFilter: (value) => dispatch(phonebookActions.filterContacts(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./Notification.module.css\";\r\nimport popTransition from \"../../transitions/popTransition.module.css\";\r\n\r\nconst Notification = ({ text, isShow }) => (\r\n  <CSSTransition\r\n    in={isShow}\r\n    timeout={250}\r\n    classNames={popTransition}\r\n    unmountOnExit\r\n  >\r\n    <div className={style.alert}>\r\n      <p>{text}</p>\r\n    </div>\r\n  </CSSTransition>\r\n);\r\n\r\nNotification.propTypes = {\r\n  text: PropTypes.string,\r\n  isShow: PropTypes.bool,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport style from \"./Phonebook.module.css\";\r\nimport logoTransition from \"../../transitions/logoTransition.module.css\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactFormContainer\";\r\nimport ContactList from \"../ContactList/contactListContainer\";\r\nimport Filter from \"../Filter/FilterContainer\";\r\nimport Notification from \"../Notification/Notification\";\r\n\r\nexport default class Phonebook extends Component {\r\n  static propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.string.isRequired,\r\n      }),\r\n    ),\r\n    addContactsToLS: PropTypes.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    isAlertShow: false,\r\n    isLogoShow: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState((state) => ({ isLogoShow: !state.isLogoShow }));\r\n\r\n    const contactsLS = localStorage.getItem(\"contacts\");\r\n\r\n    if (contactsLS) {\r\n      const { addContactsToLS } = this.props;\r\n      const contacts = JSON.parse(contactsLS);\r\n\r\n      addContactsToLS(contacts);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { contacts } = this.props;\r\n\r\n    if (prevProps.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isAlertShow, isLogoShow } = this.state;\r\n    const { contacts } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className={style.logoWrap}>\r\n          <CSSTransition\r\n            in={isLogoShow}\r\n            timeout={500}\r\n            classNames={logoTransition}\r\n          >\r\n            <h2 className={style.logo}>Phonebook</h2>\r\n          </CSSTransition>\r\n        </div>\r\n\r\n        <ContactForm />\r\n\r\n        <h2 className={style.title}>Contacts</h2>\r\n\r\n        <Filter isShow={contacts.length >= 2} />\r\n\r\n        <ContactList />\r\n\r\n        <Notification isShow={isAlertShow} text=\"Contact is already exist\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { connect } from \"react-redux\";\r\nimport * as phonebookAction from \"../../Redux/phonebookActions\";\r\n\r\nimport Phonebook from \"./Phonebook\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: state.contacts,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContactsToLS: (contacts) =>\r\n    dispatch(phonebookAction.addContactsToLS(contacts)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Phonebook);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./Redux/store\";\r\n\r\nimport \"./index.css\";\r\n\r\nimport Phonebook from \"./components/Phonebook/PhonebookContainer\";\r\n\r\nconst App = () => <Phonebook />;\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\"),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"popTransition_enter___AwzP\",\"enterActive\":\"popTransition_enterActive__32dNK\",\"exit\":\"popTransition_exit__RhvoC\",\"exitActive\":\"popTransition_exitActive__eTI4n\"};"],"sourceRoot":""}